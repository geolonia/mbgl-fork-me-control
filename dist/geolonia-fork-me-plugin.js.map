{"version":3,"file":"geolonia-fork-me-plugin.js","sources":["../src/index.js","../src/plugin.js"],"sourcesContent":["\"use strict\"\n\nclass ForkMeConntrol {\n  constructor(options) {\n    this.url = options.url\n  }\n\n  onAdd() {\n    this.container = document.createElement('div')\n    this.container.className = 'mapboxgl-ctrl mapboxgl-ctrl-group'\n\n    const img = 'https://s3.amazonaws.com/github/ribbons/forkme_left_darkblue_121621.png'\n\n    this.container.innerHTML = `<a href=\"${this.url}\"><img src=\"${img}\" alt=\"Fork me on GitHub\"></a>`\n    this.container.setAttribute('style', `\n      margin: 0;\n      background: none;\n      border: none;\n      border-radius: 0;\n      box-shadow: none;\n    `)\n\n    return this.container;\n  }\n\n  onRemove() {\n    this.container.parentNode.removeChild(this.container)\n  }\n\n  getDefaultPosition() {\n    return 'top-left'\n  }\n}\n\nexport default ForkMeConntrol;\n","import ForkMeControl from \"./index\";\nconst { registerPlugin } = window.geolonia || window.tilecloud || {};\n\nconst isDisabled = ({ dataset = {} }, snakeCasedAttributeKey) => {\n  const attributeKey = snakeCasedAttributeKey\n    .split(\"-\")\n    .map((phrase, i) =>\n      i === 0 ? phrase : phrase[0].toUpperCase() + phrase.slice(1)\n    )\n    .join(\"\");\n\n  const isDefined = attributeKey in dataset;\n  const isDisabled =\n    !isDefined ||\n    (dataset[attributeKey] !== \"\" &&\n      dataset[attributeKey].toUpperCase() !== \"DISABLED\");\n\n  return isDisabled;\n};\n\ntypeof registerPlugin === \"function\" &&\n  registerPlugin((map, target) => {\n    if (!isDisabled(target, \"geolonia-fork-me-disabled\")) {\n      const { url = \"#\" } = target.dataset || {};\n      map.addControl(new ForkMeControl({ url }));\n    }\n  });\n"],"names":["ForkMeConntrol","constructor","options","url","onAdd","container","document","createElement","className","innerHTML","this","setAttribute","onRemove","parentNode","removeChild","getDefaultPosition","window","geolonia","tilecloud","registerPlugin","map","target","ref","snakeCasedAttributeKey","attributeKey","split","phrase","i","toUpperCase","slice","join","dataset","isDisabled","addControl","ForkMeControl"],"mappings":"AAEA,IAAMA,EACJC,SAAYC,QACLC,IAAMD,EAAQC,KAGrBC,YAAAA,6BACOC,UAAYC,SAASC,cAAc,YACnCF,UAAUG,UAAY,yCAItBH,UAAUI,UAAa,YAAWC,kIAClCL,UAAUM,aAAa,QAAU,4HAQ/BD,KAAKL,WAGdO,YAAAA,yBACOP,UAAUQ,WAAWC,YAAYJ,KAAKL,YAG7CU,YAAAA,oCACS,YC7BX,OAA2BC,OAAOC,UAAYD,OAAOE,WAAa,mBAmBxC,mBAAnBC,GACLA,WAAgBC,EAAKC,gBAlBHC,EAAkBC,SAmBlBF,yBAnBY,QACxBG,EAkBoB,4BAjBvBC,MAAM,KACNL,aAAKM,EAAQC,UACN,IAANA,EAAUD,EAASA,EAAO,GAAGE,cAAgBF,EAAOG,MAAM,KAE3DC,KAAK,YAEUN,KAAgBO,IAGL,KAA1BA,EAAQP,IACiC,aAAxCO,EAAQP,GAAcI,cAOnBI,GAAiD,QAC9BX,EAAOU,SAAW,uBAA1B,KACdX,EAAIa,WAAW,IAAIC,EAAc,KAAE/B"}